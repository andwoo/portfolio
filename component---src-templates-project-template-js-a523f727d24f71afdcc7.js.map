{"version":3,"sources":["webpack:///./src/templates/projectTemplate.js","webpack:///./src/styles/projectTemplate.module.scss"],"names":["Project","RenderRepo","data","className","color","to","styles","repoItem","icon","substring","lastIndexOf","RenderTechnology","technologyItem","render","this","props","markdownRemark","frontmatter","html","title","headerTitle","titleContent","fontawesome","container","content","headerImageContainer","headerImage","name","logo","objectFit","dangerouslySetInnerHTML","__html","side","technologies","map","index","key","line","repos","React","PureComponent","pageQuery","module","exports"],"mappings":"kRAOqBA,E,oJACnBC,WAAa,YAAa,IAAXC,EAAU,EAAVA,KACb,OACE,yBAAKC,UAAU,kBACb,kBAAC,IAAD,CAAYC,MAAM,UAAUC,GAAIH,GAC9B,yBAAKC,UAAS,6CAA+CG,IAAOC,UAClE,yBAAKJ,UAAU,oBACb,0BAAMA,UAAWG,IAAOE,MACtB,uBAAGL,UAAU,2BAGjB,yBAAKA,UAAU,UACZD,EAAKO,UAAUP,EAAKQ,YAAY,KAAO,Q,EAQpDC,iBAAmB,YAAa,IAAXT,EAAU,EAAVA,KACnB,OACE,yBAAKC,UAAU,iCACb,0BAAMA,UAAWG,IAAOM,gBAAiBV,K,sCAK/CW,OAAA,WAAU,IAAD,SACuBC,KAAKC,MAAMb,KAAKc,eAAtCC,EADD,EACCA,YAAaC,EADd,EACcA,KAErB,OACA,kBAAC,IAAD,CAAQC,MAAOF,EAAYG,YAAaC,aAAcJ,EAAYE,MAAOG,aAAa,GACpF,yBAAKnB,UAAS,WAAaG,IAAOiB,WAChC,yBAAKpB,UAAS,UAAYG,IAAOkB,SAC/B,yBAAKrB,UAAWG,IAAOmB,sBACrB,kBAAC,IAAD,CAAOtB,UAAWG,IAAOoB,YAAaC,KAAMV,EAAYW,KAAMC,UAAU,aAE1E,yBAAKC,wBAAyB,CAAEC,OAAQb,MAE1C,yBAAKf,UAAS,yBAA2BG,IAAO0B,MAC9C,yBAAK7B,UAAU,kCACb,yBAAKA,UAAU,kCACZc,EAAYgB,cAAgBhB,EAAYgB,aAAaC,KAAI,SAAChC,EAAMiC,GAAP,OAAiB,kBAAC,EAAKxB,iBAAN,CAAuByB,IAAKD,EAAOjC,KAAMA,QAEtH,yBAAKC,UAAS,kBAAoBG,IAAO+B,OACzC,yBAAKlC,UAAU,kCACZc,EAAYqB,OAASrB,EAAYqB,MAAMJ,KAAI,SAAChC,EAAMiC,GAAP,OAAiB,kBAAC,EAAKlC,WAAN,CAAiBmC,IAAKD,EAAOjC,KAAMA,a,GA/CzEqC,IAAMC,eAwD9BC,EAAS,c,qBC9DtBC,EAAOC,QAAU,CAAC,UAAY,2CAA2C,qBAAuB,wDAAwD,YAAc,8CAA8C,QAAU,yCAAyC,KAAO,sCAAsC,KAAO,sCAAsC,SAAW,2CAA2C,KAAO,sCAAsC,eAAiB,iDAAiD,WAAa","file":"component---src-templates-project-template-js-a523f727d24f71afdcc7.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport { ColorLinkA } from '../components/colorlink';\nimport styles from '../styles/projectTemplate.module.scss';\nimport Image from '../components/image';\n\nexport default class Project extends React.PureComponent {\n  RenderRepo = ({data}) => {\n    return (\n      <div className=\"column is-full\">\n        <ColorLinkA color=\"#000000\" to={data}>\n          <div className={`columns is-vcentered is-mobile is-gapless ${styles.repoItem}`}>\n            <div className=\"column is-narrow\">\n              <span className={styles.icon}>\n                <i className=\"fab fa-github-square\"/>\n              </span>\n            </div>\n            <div className=\"column\">\n              {data.substring(data.lastIndexOf('/') + 1)}\n            </div>\n          </div>\n        </ColorLinkA>\n      </div>\n    );\n  }\n  \n  RenderTechnology = ({data}) => {\n    return (\n      <div className=\"column is-narrow is-uppercase\">\n        <span className={styles.technologyItem}>{data}</span>\n      </div>\n    )\n  }\n\n  render() {\n    const { frontmatter, html } = this.props.data.markdownRemark;\n\n    return (\n    <Layout title={frontmatter.headerTitle} titleContent={frontmatter.title} fontawesome={true}>\n      <div className={`columns ${styles.container}`}>\n        <div className={`column ${styles.content}`}>\n          <div className={styles.headerImageContainer}>\n            <Image className={styles.headerImage} name={frontmatter.logo} objectFit=\"contain\" />\n          </div>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n        <div className={`column is-one-quarter ${styles.side}`}>\n          <div className=\"columns is-multiline is-mobile\">\n            <div className=\"columns is-multiline is-mobile\">\n              {frontmatter.technologies && frontmatter.technologies.map((data, index) => <this.RenderTechnology key={index} data={data}/>)}\n            </div>\n            <div className={`column is-full ${styles.line}`}/>\n            <div className=\"columns is-multiline is-mobile\">\n              {frontmatter.repos && frontmatter.repos.map((data, index) => <this.RenderRepo key={index} data={data}/>)}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )};\n};\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        logo\n        path\n        title\n        headerTitle\n        repos\n        technologies\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"projectTemplate-module--container--FjC6S\",\"headerImageContainer\":\"projectTemplate-module--header-image-container--d9uuz\",\"headerImage\":\"projectTemplate-module--header-image--1nYGh\",\"content\":\"projectTemplate-module--content--3kRHl\",\"side\":\"projectTemplate-module--side--3wtBn\",\"icon\":\"projectTemplate-module--icon--1VkVK\",\"repoItem\":\"projectTemplate-module--repo-item--1IpMh\",\"line\":\"projectTemplate-module--line--3uBtV\",\"technologyItem\":\"projectTemplate-module--technology-Item--2h22y\",\"spinAround\":\"projectTemplate-module--spinAround--30nKj\"};"],"sourceRoot":""}